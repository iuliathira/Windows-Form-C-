<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="KeyPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        MGwXAJStAAAAAElFTkSuQmCC
</value>
  </data>
</root>